/*
 * Billing Processor
 * No description
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package biz.turnonline.ecosystem.widget.shared.rest.bill;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * BillItem
 */
public class BillItem
{
    @JsonProperty( "amount" )
    private Double amount = null;

    @JsonProperty( "currency" )
    private String currency = null;

    @JsonProperty( "finalPrice" )
    private Double finalPrice = null;

    @JsonProperty( "finalVat" )
    private String finalVat = null;

    @JsonProperty( "id" )
    private String id = null;

    @JsonProperty( "itemName" )
    private String itemName = null;

    @JsonProperty( "priceExclVat" )
    private Double priceExclVat = null;

    @JsonProperty( "parentKey" )
    private String parentKey = null;

    @JsonProperty( "unit" )
    private String unit = null;

    public BillItem amount( Double amount )
    {
        this.amount = amount;
        return this;
    }

    /**
     * The requested amount (quantity) of this item to be invoiced.
     *
     * @return amount
     **/
    @JsonProperty( "amount" )
    public Double getAmount()
    {
        return amount;
    }

    public void setAmount( Double amount )
    {
        this.amount = amount;
    }

    public BillItem currency( String currency )
    {
        this.currency = currency;
        return this;
    }

    /**
     * The currency alphabetic code based on the ISO 4217. If not set, the accountâ€™s default currency will be set.
     *
     * @return currency
     **/
    @JsonProperty( "currency" )
    public String getCurrency()
    {
        return currency;
    }

    public void setCurrency( String currency )
    {
        this.currency = currency;
    }

    public BillItem finalPrice( Double finalPrice )
    {
        this.finalPrice = finalPrice;
        return this;
    }

    /**
     * The final price including VAT as a result of the calculation of the item price excluding VAT (VAT base), selected VAT and amount.
     *
     * @return finalPrice
     **/
    @JsonProperty( "finalPrice" )
    public Double getFinalPrice()
    {
        return finalPrice;
    }

    public void setFinalPrice( Double finalPrice )
    {
        this.finalPrice = finalPrice;
    }

    public BillItem finalVat( String finalVat )
    {
        this.finalVat = finalVat;
        return this;
    }

    /**
     * The context sensitive (customer country etc) VAT code, taken from the VAT rate code book.
     *
     * @return finalVat
     **/
    @JsonProperty( "finalVat" )
    public String getFinalVat()
    {
        return finalVat;
    }

    public void setFinalVat( String finalVat )
    {
        this.finalVat = finalVat;
    }

    public BillItem id( String id )
    {
        this.id = id;
        return this;
    }

    /**
     * The bill item identification. Unique only with combination of the parent ID (see parent key).
     *
     * @return id
     **/
    @JsonProperty( "id" )
    public String getId()
    {
        return id;
    }

    public void setId( String id )
    {
        this.id = id;
    }

    public BillItem itemName( String itemName )
    {
        this.itemName = itemName;
        return this;
    }

    /**
     * Billing item nam
     *
     * @return itemName
     **/
    @JsonProperty( "itemName" )
    public String getItemName()
    {
        return itemName;
    }

    public void setItemName( String itemName )
    {
        this.itemName = itemName;
    }

    public BillItem priceExclVat( Double priceExclVat )
    {
        this.priceExclVat = priceExclVat;
        return this;
    }

    /**
     * The product price for a single unit (meaning amount 1.0 as a quantity). The price is excluding VAT in case company is VAT payer, otherwise price is final.
     *
     * @return priceExclVat
     **/
    @JsonProperty( "priceExclVat" )
    public Double getPriceExclVat()
    {
        return priceExclVat;
    }

    public void setPriceExclVat( Double priceExclVat )
    {
        this.priceExclVat = priceExclVat;
    }

    public BillItem parentKey( String parentKey )
    {
        this.parentKey = parentKey;
        return this;
    }

    /**
     * The unique identification incl. the parent Bill identification.
     *
     * @return parentKey
     **/
    @JsonProperty( "parentKey" )
    public String getParentKey()
    {
        return parentKey;
    }

    public void setParentKey( String parentKey )
    {
        this.parentKey = parentKey;
    }

    public BillItem unit( String unit )
    {
        this.unit = unit;
        return this;
    }

    /**
     * The code from the billing unit codebook - unit of measure at invoice.
     *
     * @return unit
     **/
    @JsonProperty( "unit" )
    public String getUnit()
    {
        return unit;
    }

    public void setUnit( String unit )
    {
        this.unit = unit;
    }

    @Override
    public String toString()
    {
        return "class BillItem {\n" +
                "    amount: " + toIndentedString( amount ) + "\n" +
                "    currency: " + toIndentedString( currency ) + "\n" +
                "    finalPrice: " + toIndentedString( finalPrice ) + "\n" +
                "    finalVat: " + toIndentedString( finalVat ) + "\n" +
                "    id: " + toIndentedString( id ) + "\n" +
                "    itemName: " + toIndentedString( itemName ) + "\n" +
                "    priceExclVat: " + toIndentedString( priceExclVat ) + "\n" +
                "    parentKey: " + toIndentedString( parentKey ) + "\n" +
                "    unit: " + toIndentedString( unit ) + "\n" +
                "}";
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString( Object o )
    {
        if ( o == null )
        {
            return "null";
        }
        return o.toString().replace( "\n", "\n    " );
    }
}

