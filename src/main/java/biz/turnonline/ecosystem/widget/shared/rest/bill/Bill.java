/*
 * Billing Processor
 * TurnOnline.biz Ecosystem Billing Processor (Bookkeeping)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package biz.turnonline.ecosystem.widget.shared.rest.bill;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;

/**
 * A document that represent a scanned receipt or incoming invoice. The content of a bill (receipt) interpreted as data.
 */
public class Bill   {
  @JsonProperty("billNumber")
  private String billNumber = null;

  @JsonProperty("createdDate")
  private Date createdDate = null;

  @JsonProperty("dateOfIssue")
  private Date dateOfIssue = null;

  @JsonProperty("id")
  private Long id = null;

  @JsonProperty("itemName")
  private String itemName = null;

  @JsonProperty("items")
  private List<BillItem> items = null;

  @JsonProperty("modificationDate")
  private Date modificationDate = null;

  @JsonProperty("supplier")
  private Supplier supplier = null;

  @JsonProperty("totalPrice")
  private Double totalPrice = null;

  /**
   * Type of document
   */
  public enum TypeEnum {
    RECEIPT("RECEIPT"),
    
    INCOMING_INVOICE("INCOMING_INVOICE");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("currency")
  private String currency = null;

  @JsonProperty("scans")
  private List<Scan> scans = null;

  public Bill billNumber(String billNumber) {
    this.billNumber = billNumber;
    return this;
  }

  /**
   * Bill (receipt) number, or in case of incoming invoice an invoice number
   * @return billNumber
   **/
  @JsonProperty("billNumber")
  public String getBillNumber() {
    return billNumber;
  }

  public void setBillNumber(String billNumber) {
    this.billNumber = billNumber;
  }

  public Bill createdDate(Date createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * A date when bill record has been created. Managed solely by the service. RFC 3339
   * @return createdDate
   **/
  @JsonProperty("createdDate")
  public Date getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(Date createdDate) {
    this.createdDate = createdDate;
  }

  public Bill dateOfIssue(Date dateOfIssue) {
    this.dateOfIssue = dateOfIssue;
    return this;
  }

  /**
   * The date when the cash register document has been issued. If not provided, the current date will be used. RFC 3339
   * @return dateOfIssue
   **/
  @JsonProperty("dateOfIssue")
  public Date getDateOfIssue() {
    return dateOfIssue;
  }

  public void setDateOfIssue(Date dateOfIssue) {
    this.dateOfIssue = dateOfIssue;
  }

  public Bill id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * The unique bill identification.
   * @return id
   **/
  @JsonProperty("id")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Bill itemName(String itemName) {
    this.itemName = itemName;
    return this;
  }

  /**
   * Bill name
   * @return itemName
   **/
  @JsonProperty("itemName")
  public String getItemName() {
    return itemName;
  }

  public void setItemName(String itemName) {
    this.itemName = itemName;
  }

  public Bill items(List<BillItem> items) {
    this.items = items;
    return this;
  }

  public Bill addItemsItem(BillItem itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<BillItem>();
    }
    this.items.add(itemsItem);
    return this;
  }

  /**
   * Get items
   * @return items
   **/
  @JsonProperty("items")
  public List<BillItem> getItems() {
    return items;
  }

  public void setItems(List<BillItem> items) {
    this.items = items;
  }

  public Bill modificationDate(Date modificationDate) {
    this.modificationDate = modificationDate;
    return this;
  }

  /**
   * The date of the last modification of the bill resource values. Managed solely by the service. RFC 3339
   * @return modificationDate
   **/
  @JsonProperty("modificationDate")
  public Date getModificationDate() {
    return modificationDate;
  }

  public void setModificationDate(Date modificationDate) {
    this.modificationDate = modificationDate;
  }

  public Bill supplier(Supplier supplier) {
    this.supplier = supplier;
    return this;
  }

  /**
   * Get supplier
   * @return supplier
   **/
  @JsonProperty("supplier")
  public Supplier getSupplier() {
    return supplier;
  }

  public void setSupplier(Supplier supplier) {
    this.supplier = supplier;
  }

  public Bill totalPrice(Double totalPrice) {
    this.totalPrice = totalPrice;
    return this;
  }

  /**
   * The total price as a sum of all checked in bill items and its amount including target rounding mode. Including VAT.
   * @return totalPrice
   **/
  @JsonProperty("totalPrice")
  public Double getTotalPrice() {
    return totalPrice;
  }

  public void setTotalPrice(Double totalPrice) {
    this.totalPrice = totalPrice;
  }

  public Bill type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Type of document
   * @return type
   **/
  @JsonProperty("type")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public Bill currency(String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * The currency alphabetic code based on the ISO 4217. If not set, the accountâ€™s default currency will be set.
   * @return currency
   **/
  @JsonProperty("currency")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public Bill scans(List<Scan> scans) {
    this.scans = scans;
    return this;
  }

  public Bill addScansItem(Scan scansItem) {
    if (this.scans == null) {
      this.scans = new ArrayList<Scan>();
    }
    this.scans.add(scansItem);
    return this;
  }

  /**
   * The list of scans associated with this bill.
   * @return scans
   **/
  @JsonProperty("scans")
  public List<Scan> getScans() {
    return scans;
  }

  public void setScans(List<Scan> scans) {
    this.scans = scans;
  }


  @Override
  public boolean equals( Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Bill bill = (Bill) o;
    return Objects.equals(this.billNumber, bill.billNumber) &&
        Objects.equals(this.createdDate, bill.createdDate) &&
        Objects.equals(this.dateOfIssue, bill.dateOfIssue) &&
        Objects.equals(this.id, bill.id) &&
        Objects.equals(this.itemName, bill.itemName) &&
        Objects.equals(this.items, bill.items) &&
        Objects.equals(this.modificationDate, bill.modificationDate) &&
        Objects.equals(this.supplier, bill.supplier) &&
        Objects.equals(this.totalPrice, bill.totalPrice) &&
        Objects.equals(this.type, bill.type) &&
        Objects.equals(this.currency, bill.currency) &&
        Objects.equals(this.scans, bill.scans);
  }

  @Override
  public int hashCode() {
    return Objects.hash(billNumber, createdDate, dateOfIssue, id, itemName, items, modificationDate, supplier, totalPrice, type, currency, scans);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Bill {\n");

    sb.append("    billNumber: ").append(toIndentedString(billNumber)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    dateOfIssue: ").append(toIndentedString(dateOfIssue)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    itemName: ").append(toIndentedString(itemName)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    modificationDate: ").append(toIndentedString(modificationDate)).append("\n");
    sb.append("    supplier: ").append(toIndentedString(supplier)).append("\n");
    sb.append("    totalPrice: ").append(toIndentedString(totalPrice)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    scans: ").append(toIndentedString(scans)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString( Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

